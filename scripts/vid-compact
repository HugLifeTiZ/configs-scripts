#!/bin/sh
# Re-compress videos using VP9 and hardware accel to save space.
set -eu

compact_h264 () {
    ffmpeg -hwaccel vaapi -vaapi_device /dev/dri/renderD128 -i "$1" \
     -c:v vp8_vaapi -q:v 0.42 -filter:v 'format=nv12,hwupload' \
     -c:a copy -map_metadata 0 -y "${1%.*}-compact-h264.mkv"
}

compact_vp8 () {
    ffmpeg -hwaccel vaapi -vaapi_device /dev/dri/renderD128 -i "$1" \
     -c:v vp8_vaapi -q:v 0.42 -filter:v 'format=nv12,hwupload' \
     -c:a copy -map_metadata 0 -y "${1%.*}-compact-vp8.mkv"
}

compact_vp9 () {
    ffmpeg -hwaccel vaapi -vaapi_device /dev/dri/renderD128 -i "$1" \
     -c:v vp9_vaapi -q:v 1 -filter:v 'format=nv12,hwupload' \
     -c:a copy -map_metadata 0 -y "${1%.*}-compact-vp9.mkv"
}

compact_cpu_vp9 () {
    ffmpeg -i "$1" \
     -c:v libvpx-vp9 -b:v 0 -crf 30 -pass 1 -an -f matroska /dev/null
    ffmpeg -i "$1" \
     -c:v libvpx-vp9 -b:v 0 -crf 30 -pass 2 \
     -c:a libopus -map_metadata 0 -y "${1%.*}-compact-vp9.mkv"
}


rundir="/run"
if [ "$(id -u)" -gt 0 ]; then
    rundir="/run/user/$(id -u)"
fi
fifo="$rundir/vid-compact.fifo"

if [ "$1" = "--daemon" ]; then
    exec > "$rundir/vid-compact.log" 2>&1
    
    if ! [ -p "$fifo" ]; then mkfifo "$fifo"; fi
    rm_fifo () { rm -f "$fifo" || :; exit; }
    trap rm_fifo INT QUIT TERM EXIT
    exec 3< "$fifo"    
    while :; do
        while read -r video; do
            if [ "$video" = "--daemon" ] || [ "$video" = "--queue" ]; then
                printf "!! Nice try, jackass.\n"
            else
                printf "== Compacting %s\n" "$video"
                if vid-compact vp9 "$video"; then
                    printf "== Compacting complete.\n"
                    if file "${video%.*}-compact-vp9.mkv" | grep -qi video; then
                        printf "== Would remove %s\n here" "$video"
                    fi
                else
                    printf "!! Compacting failed.\n"
                fi
            fi
        done <&3
        sleep 0.1
    done
    printf "== Exiting.\n"
elif [ "$1" = "--queue" ]; then
    if [ -e "$fifo" ]; then
        printf %s\\n "$(readlink -f "$2")" > "$fifo"
    else
        printf "Can't queue; daemon not running\n" >&2
        exit 1
    fi
else
    type="$1"; shift
    for f in "$@"; do
        "compact_$type" "$f"
    done
fi
