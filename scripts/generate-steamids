#!/bin/sh
# Generate .steamid files for installed steam games so scraping tools can
# download metadata for them.
# For now, if you're using Flatpak Steam, link .steam to the real steam dir.
set -eu

puts () { printf %s\\n "$*"; }
acf_value () { sed -nE 's:^\s+"'"$1"'"\s+"(.+)"$:\1:p' "$2"; }
safe_filename () {
	puts "${1#${1%%[![:space:]]*}}" | \
	 sed -E -e 's/: / - /' -e "s/[^A-Za-z0-9._()'!& -]//g";
}

[ -d "$1" ]; [ -w "$1" ]
target="$1"
tmp=$(mktemp -d)

# These aren't games so don't include them.
cat > "$tmp/excludes" <<'EOF'
^appid_
^Steamworks .+$
^Proton [0-9\.]+$
^Proton Experimental$
Runtime
Studio
EOF

# Get a list of library folders. The first is always $HOME/.steam/steamapps.
main_steamapps=$(find "$HOME/.steam/" -name steamapps)
puts "$main_steamapps" > "$tmp/libraries"
puts "$(sed -nE 's:^\s+"path"\s+"(.+)"$:\1/steamapps:p' \
 "$main_steamapps/libraryfolders.vdf")" \
 >> "$tmp/libraries"

# Loop through each library folder and parse .acf files.
while read -r library; do
	if ! cd "$library"; then continue; fi
	for acf in appmanifest_*.acf; do
		if [ "$acf" = 'appmanifest_*.acf' ]; then continue; fi
		appid=$(acf_value appid "$acf")
		name=$(acf_value name "$acf")
		while read -r pattern; do
			if puts "$name" | grep -qE "$pattern"; then
				#puts "$name is excluded; moving on."
				continue 2
			fi
		done < "$tmp/excludes"
		if grep -q "appid=$appid" "$target/"*.steamid 2> /dev/null; then
			#puts ".steamid for $appid already exists; moving on."
			continue
		fi
		safe=$(safe_filename "$name")
		puts "Creating $safe.steamid for $appid."
		cat > "$target/$safe.steamid" <<-EOF
		appid=$appid
		name=$name
		EOF
	done
done < "$tmp/libraries"

rm -r "$tmp"
