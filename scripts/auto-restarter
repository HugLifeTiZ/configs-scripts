#!/bin/sh
# Starts a process, then restarts this process if it dies.
# Don't use this on any process that will background itself.
set -eu

rundir="/run/user/$(id -u)/auto-restarter"
mkdir -p "$rundir"
last=0
mode=replace
timeout=5
notify=0

while true; do case "$1" in
    -a|--abort)    mode=abort;;
    -c|--coexist)  mode=coexist;;
    -r|--replace)  mode=replace;;
    -n|--notify)   notify=1;;
    -t|--timeout)  timeout="$2"; shift;;
    *) break;;
esac; shift; done

prog=$(basename "$1")
if [ -e "$rundir/$prog" ]; then
    other=$(cat "$rundir/$prog")
    if [ "$$" != "$other" ]; then
        if [ "$mode" = replace ]; then
            kill "$other" || :
            sleep 1
        elif [ "$mode" = abort ]; then
            exit
        fi
    fi
fi
printf %s\\n "$$" > "$rundir/$prog"

kill_descendents () {
    for p in $(ps -o pid= --ppid "${1:-$$}"); do
        kill_descendents "$p"
        if [ -e "/proc/$p" ]; then kill "$p"; fi
    done
}

finish () {
    if [ -e "$rundir/$prog" ]; then rm "$rundir/$prog"; fi
    kill_descendents
    #kill -- "-$pid" || :
    #kill $(ps -o pid= --ppid $$) || :
    trap - EXIT INT QUIT TERM
    exit "${1:-0}"
}
trap finish EXIT INT QUIT TERM
#trap 'exit 127' INT

while true; do
    now=$(date +%s)
    if [ "$((now - last))" -lt "$timeout" ]; then
        notify-send "$1 restarting too fast" "Aborted auto-restart." || :
        finish 1
    else
        last="$now"
        "$@" || : &
        pid="$!"
        wait "$pid"
        if [ "$notify" = 1 ]; then
            notify-send "$1 died" "Attempting to restart." || :
        fi
    fi
done
finish 0
