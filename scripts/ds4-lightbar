#!/bin/bash
# Change the color of DualShock 4 LEDS, and also setup udev rules and perms.
# This is a stark contrast to the xpad-leds script; games like Transistor and
# TowerFall make use of the light bar so it needs to be user writable.

# Usage: ds4-lightbar INDEX|all|newest (R G B)|default|off
#   Change per-controller defaults by editing this file.

defaults=(
    "0 50 50"
    "50 0 50"
    "50 50 0"
    "50 50 50"
)

if [[ "$1" == "install" ]]; then
    # Install udev rule.
    [[ "$(whoami)" != "root" ]] && exec sudo "$0" "$@"
    cat > /etc/udev/rules.d/50-ds4-lightbar.rules <<EOF
SUBSYSTEM=="input", DRIVERS=="sony", RUN+="$(readlink -f "$0") setup"
EOF
    udevadm control --reload
    exit
elif [[ "$1" == "setup" ]]; then
    # Make leds user writable.
    [[ "$(whoami)" != "root" ]] && exec sudo "$0" "$@"
    for syspath in /sys/bus/hid/drivers/sony/0*/leds; do
        chmod a+w $syspath/*/brightness;
    done
    # Set lights as controllers come and go.
    "$0" all default
elif [[ "$#" =~ 0|1|3 ]]; then
    echo "Usage: ds4-lightbar INDEX|all|newest (R G B)|default|off"
    echo "  Edit this script to set the default color."
    exit 1
else  # Convenient light-changing API.
    index=$1; r=$2; g=$3; b=$4  # Index refers to the nth available controller.
    
    # We use the syspath leds directory now because there are multiple vendor
    # and product IDs that expose RGB LEDs, and we can also just do *red,
    # *green, *blue, and *global since the dir only contains that device's leds.
    # We're also going to sort each device by creation time.
    devices=(); for syspath in /sys/bus/hid/drivers/sony/0*; do
        if [[ -e $(echo $syspath/leds/*:global) ]]; then
            devices+=("$(stat -c '%Y %n' $syspath/leds)")
        fi
    done
    leds=($(for d in "${devices[@]}"; do echo $d; done \
     | sort -n | cut -d' ' -f2))
    
    # Define a function rather than repeating ourselves ad nauseum.
    set_led () {
        led=${leds[$1 - 1]}; [[ "$led" ]] || return
        if [[ "$2" == "off" ]]; then echo 0 > $led/*global/brightness
        elif [[ "$2" == "default" ]]; then
            # Bash functions have no sense of scope. We can peek at the index.
            default=${defaults[$1 - 1]}
            [[ "$default" ]] || {
                echo "No default color defined for controller $index."
                default=${defaults[0]}
            }
            set_led $1 $default
        else
            echo 1 > $led/*global/brightness
            echo $2 > $led/*red/brightness
            echo $3 > $led/*green/brightness
            echo $4 > $led/*blue/brightness
        fi
    }
    
    if [[ "$index" == "all" ]]; then
        for i in $(seq 1 ${#leds[@]}); do set_led $i $r $g $b; done;
    elif [[ "$index" == "newest" ]]; then set_led ${#leds[@]} $r $g $b
    else set_led $index $r $g $b; fi
fi
