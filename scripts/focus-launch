#!/bin/sh
# focus-launch -- Activate a window for an already running application, or
# otherwise start it and then activate it. Allows dock-like funcionality for
# keyboard shortcuts or plain panel launchers. The script will fail if it can't
# figure out from the desktop file what the window class is, because the most
# important raison-d'Ãªtre for this script is focusing an application.
#     Usage: focus-launch [-c|--class WM_CLASS] application[.desktop]
set -eu
for cmd in wmctrl xdg-open; if ! [ -x "$(command -v "$cmd")" ]; then
    printf "This script requires $cmd; please install it.\n" >&2
    exit 1
fi; done

# Print the comment header of this file when asked for help.
usage () { sed -nE '/^#/!q; /SC[0-9]{4}/d; s/^#( |$)//p' "$0"; exit "${1:-0}"; }
case "${1:-}" in -h|--help|--usage|help|usage|"") usage 0 ;; esac

#############
# FUNCTIONS #
#############

# Find the given .desktop file.
# Runs itself in a subshell so it can safely modify IFS.
find_desktop () { (
	IFS=':'; set -o noglob
	dirs="${XDG_DATA_HOME:-$HOME/.local/share}"
	dirs="$dirs:${XDG_DATA_DIRS:-/usr/local/share:/usr/share}"
	for dir in $dirs; do
		if [ "$dir" ] && [ -r "$dir/applications/$target" ]; then
			printf %s\\n "$dir/applications/$target"
			return
		fi
	done
) }


#############
# MAIN CODE #
#############

while :; do case "${1:-}" in
-c|--class) class="$2"; shift 2 ;;
*) target="$1"; shift; break ;;
esac; done

if ! [ "${target:-}" ]; then usage 1; fi
if [ "${target%.desktop}" = "$target" ]; then target="$target.desktop"; fi

desktop=$(find_desktop "$target")
if ! [ "$desktop" ]; then
	notify-send "Focus/Launch Failed" "Couldn't find desktop file."
	exit 1
fi

if ! [ "${class:-}" ]; then
	class=$(sed -nr 's/^StartupWMClass=(.+)$/\1/p' < "$desktop")
fi

if ! [ "${class:-}" ]; then
	notify-send "Focus/Launch Failed" "Couldn't find window class."
	exit 1
fi

if ! wmctrl -x -a "$class"; then
	xdg-open "$desktop"
	count=0; while [ "$count" -le 20 ]; do
		if wmctrl -lx | awk '{print $3}' | grep -q "$class"; then
			wmctrl -x -a "$class"
			break
		fi
		count=$((count + 1))
		sleep 0.5
	done
fi
